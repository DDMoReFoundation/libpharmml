/*******************************************************************************
 * Copyright (c) 2014-2016 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.27 at 11:15:38 AM GMT 
//


package eu.ddmore.libpharmml.dom.dataset;

import java.util.ArrayList;
import java.util.List;

import javax.swing.tree.TreeNode;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.util.ChainedList;


/**
 * 
 *                 The type that defines mapping between targets in the structural model and the data.
 *             
 * 
 * <p>Java class for TargetMappingType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TargetMappingType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element name="Map" type="{http://www.pharmml.org/2013/08/Dataset}MapType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="blkIdRef" type="{http://www.pharmml.org/2013/03/CommonTypes}BlockIdType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TargetMappingType", propOrder = {
    "map"
})
public class TargetMapping
    extends PharmMLRootType
{

    @XmlElement(name = "Map", required = true)
    protected List<MapType> map;
    @XmlAttribute(name = "blkIdRef")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String blkIdRef;

    /**
     * Gets the value of the map property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the map property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MapType }
     * 
     * 
     */
    public List<MapType> getListOfMap() {
        if (map == null) {
            map = new ArrayList<MapType>();
        }
        return this.map;
    }

    /**
     * Gets the value of the blkIdRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBlkIdRef() {
        return blkIdRef;
    }

    /**
     * Sets the value of the blkIdRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBlkIdRef(String value) {
        this.blkIdRef = value;
    }
    
    /**
     * Creates a new empty {@link MapType} map element, adds it to the current object and returns it.
     * @return The created {@link MapType} object.
     */
    public MapType createMap(){
            MapType el = new MapType();
            getListOfMap().add(el);
            return el;
    }
    /**
     * Creates a new empty {@link MapType} map element, adds it to the current object and returns it.
     * @param dataSymbol
     * @param modelSymbol
     * @return The created {@link MapType} object.
     */
    public MapType createMap(String dataSymbol, String modelSymbol){
            MapType el = new MapType(dataSymbol,modelSymbol);
            getListOfMap().add(el);
            return el;
    }

	@Override
	protected List<TreeNode> listChildren() {
		return new ChainedList<TreeNode>()
				.addIfNotNull(map);
	}

}
