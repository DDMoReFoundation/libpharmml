/*******************************************************************************
 * Copyright (c) 2014-2016 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.21 at 11:29:00 AM BST 
//


package eu.ddmore.libpharmml.dom.commontypes;

import java.util.List;

import javax.swing.tree.TreeNode;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import eu.ddmore.libpharmml.util.ChainedList;
import eu.ddmore.libpharmml.visitor.Visitor;


/**
 * 
 *                 This type specifies cell selector for a matrix.
 *             
 * 
 * <p>Java class for MatrixCellSelectorType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MatrixCellSelectorType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element name="RowIndex" type="{http://www.pharmml.org/2013/03/CommonTypes}MatrixVectorIndexType"/>
 *         &lt;element name="ColumnIndex" type="{http://www.pharmml.org/2013/03/CommonTypes}MatrixVectorIndexType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MatrixCellSelectorType", propOrder = {
    "rowIndex",
    "columnIndex"
})
public class MatrixCellSelector
    extends PharmMLRootType
{

    @XmlElement(name = "RowIndex", required = true)
    protected MatrixVectorIndex rowIndex;
    @XmlElement(name = "ColumnIndex", required = true)
    protected MatrixVectorIndex columnIndex;
    
    /**
     * Empty constructor
     */
    public MatrixCellSelector(){}
    
    /**
     * Constructs a matrix cell selector with the required parameters.
     * @param rowIndex Row index of the selected cell within the matrix.
     * @param columnIndex Column index of the selected cell within the matrix.
     */
    public MatrixCellSelector(MatrixVectorIndex rowIndex, MatrixVectorIndex columnIndex){
    	this.rowIndex = rowIndex;
    	this.columnIndex = columnIndex;
    }
    
    /**
     * Constructs a matrix cell selector with the required parameters.
     * A {@link MatrixVectorIndex} object will be built from the primitive paraemeters
     * for each attribute.
     * @param rowIndex Row index of the selected cell within the matrix.
     * @param columnIndex Column index of the selected cell within the matrix.
     */
    public MatrixCellSelector(int rowIndex, int columnIndex){
    	this(new MatrixVectorIndex(rowIndex),new MatrixVectorIndex(columnIndex));
    }

    /**
     * Gets the value of the rowIndex property.
     * 
     * @return
     *     possible object is
     *     {@link MatrixVectorIndex }
     *     
     */
    public MatrixVectorIndex getRowIndex() {
        return rowIndex;
    }

    /**
     * Sets the value of the rowIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link MatrixVectorIndex }
     *     
     */
    public void setRowIndex(MatrixVectorIndex value) {
        this.rowIndex = value;
    }

    /**
     * Gets the value of the columnIndex property.
     * 
     * @return
     *     possible object is
     *     {@link MatrixVectorIndex }
     *     
     */
    public MatrixVectorIndex getColumnIndex() {
        return columnIndex;
    }

    /**
     * Sets the value of the columnIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link MatrixVectorIndex }
     *     
     */
    public void setColumnIndex(MatrixVectorIndex value) {
        this.columnIndex = value;
    }

	@Override
	protected List<TreeNode> listChildren() {
		return new ChainedList<TreeNode>()
				.addIfNotNull(rowIndex)
				.addIfNotNull(columnIndex);
	}

	@Override
	public void accept(Visitor visitor) {
		visitor.visit(this);
	}

}
