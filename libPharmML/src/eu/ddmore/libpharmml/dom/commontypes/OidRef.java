/*******************************************************************************
 * Copyright (c) 2014-2016 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.24 at 03:18:36 PM GMT 
//


package eu.ddmore.libpharmml.dom.commontypes;

import java.util.Collections;
import java.util.List;

import javax.swing.tree.TreeNode;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import eu.ddmore.libpharmml.dom.maths.ObjectFactory;
import eu.ddmore.libpharmml.dom.tags.LogicBinOperand;
import eu.ddmore.libpharmml.dom.tags.PharmMLObject;


/**
 * Type used by element referencing an OID.
 * 
 * <p>Java class for OidRefType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OidRefType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;attGroup ref="{http://www.pharmml.org/2013/03/CommonTypes}OidRefGroup"/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OidRefType")
public class OidRef
    extends PharmMLRootType implements LogicBinOperand
{

    @XmlAttribute(name = "oidRef", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String oidRef;
    
    /**
     * Empty constructor
     */
    public OidRef(){}
    
    /**
     * Creates a new reference to an object with the given id.
     * @param oidRef Id of the refered object.
     */
    public OidRef(String oidRef){
    	this.oidRef = oidRef;
    }
    
    /**
     * Creates a new reference to the given object.
     * @param object Referred object which must have a defined oid.
     */
    public OidRef(PharmMLObject object){
    	this.oidRef = object.getOid();
    }

    /**
     * Gets the value of the oidRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOidRef() {
        return oidRef;
    }

    /**
     * Sets the value of the oidRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOidRef(String value) {
        this.oidRef = value;
    }

	@Override
	protected List<TreeNode> listChildren() {
		return Collections.emptyList();
	}

	@Override
	public JAXBElement<OidRef> toJAXBElementOfLogicBinOp() {
		return ObjectFactory.getInstance().createLogicBinOpArmRef(this);
	}

}
