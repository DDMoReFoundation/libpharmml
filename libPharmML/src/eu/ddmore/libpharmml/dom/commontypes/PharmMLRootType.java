/*******************************************************************************
 * Copyright (c) 2014 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.24 at 03:18:36 PM GMT 
//


package eu.ddmore.libpharmml.dom.commontypes;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import eu.ddmore.libpharmml.dom.IndependentVariableType;
import eu.ddmore.libpharmml.dom.dataset.ColumnMappingType;
import eu.ddmore.libpharmml.dom.dataset.ColumnRefType;
import eu.ddmore.libpharmml.dom.dataset.ColumnsDefinitionType;
import eu.ddmore.libpharmml.dom.dataset.CommonColumnDefnType;
import eu.ddmore.libpharmml.dom.dataset.DataSetType;
import eu.ddmore.libpharmml.dom.dataset.ImportDataType;
import eu.ddmore.libpharmml.dom.dataset.ImportTargetDataType;
import eu.ddmore.libpharmml.dom.dataset.TargetToolDataSetType;
import eu.ddmore.libpharmml.dom.modeldefn.CommonParameterModelType;
import eu.ddmore.libpharmml.dom.modeldefn.CommonParameterType;
import eu.ddmore.libpharmml.dom.modeldefn.CorrelatedRandomVarType;
import eu.ddmore.libpharmml.dom.modeldefn.CorrelationType;
import eu.ddmore.libpharmml.dom.modeldefn.CovariateDefinitionType;
import eu.ddmore.libpharmml.dom.modeldefn.CovariateModelType;
import eu.ddmore.libpharmml.dom.modeldefn.ModelDefinitionType;
import eu.ddmore.libpharmml.dom.modeldefn.ObservationErrorType;
import eu.ddmore.libpharmml.dom.modeldefn.StructuralModelType;
import eu.ddmore.libpharmml.dom.modeldefn.VariabilityDefnBlock;
import eu.ddmore.libpharmml.dom.modeldefn.VariabilityLevelDefnType;
import eu.ddmore.libpharmml.dom.modellingsteps.AlgorithmType;
import eu.ddmore.libpharmml.dom.modellingsteps.CodeInjectionType;
import eu.ddmore.libpharmml.dom.modellingsteps.CommonModellingStepType;
import eu.ddmore.libpharmml.dom.modellingsteps.DatasetMappingType;
import eu.ddmore.libpharmml.dom.modellingsteps.DependentsType;
import eu.ddmore.libpharmml.dom.modellingsteps.EstimationOperationType;
import eu.ddmore.libpharmml.dom.modellingsteps.GenericCodeType;
import eu.ddmore.libpharmml.dom.modellingsteps.MappingType;
import eu.ddmore.libpharmml.dom.modellingsteps.ModellingStepsType;
import eu.ddmore.libpharmml.dom.modellingsteps.MultipleDVMappingType;
import eu.ddmore.libpharmml.dom.modellingsteps.NONMEMdataSetType;
import eu.ddmore.libpharmml.dom.modellingsteps.ObservationsType;
import eu.ddmore.libpharmml.dom.modellingsteps.OperationPropertyType;
import eu.ddmore.libpharmml.dom.modellingsteps.ParameterEstimateType;
import eu.ddmore.libpharmml.dom.modellingsteps.SimulationOperationType;
import eu.ddmore.libpharmml.dom.modellingsteps.StepDependencyType;
import eu.ddmore.libpharmml.dom.modellingsteps.StepType;
import eu.ddmore.libpharmml.dom.modellingsteps.SymbolMappingType;
import eu.ddmore.libpharmml.dom.modellingsteps.TargetToolReferenceType;
import eu.ddmore.libpharmml.dom.modellingsteps.TargetToolSymbolType;
import eu.ddmore.libpharmml.dom.modellingsteps.TargetToolType;
import eu.ddmore.libpharmml.dom.modellingsteps.TimepointsType;
import eu.ddmore.libpharmml.dom.modellingsteps.ToEstimateType;
import eu.ddmore.libpharmml.dom.trialdesign.ActivityType;
import eu.ddmore.libpharmml.dom.trialdesign.ArmDefnType;
import eu.ddmore.libpharmml.dom.trialdesign.CellDefnType;
import eu.ddmore.libpharmml.dom.trialdesign.DemographicType;
import eu.ddmore.libpharmml.dom.trialdesign.DosingRegimenType;
import eu.ddmore.libpharmml.dom.trialdesign.DosingTimesPointsType;
import eu.ddmore.libpharmml.dom.trialdesign.DosingVariableType;
import eu.ddmore.libpharmml.dom.trialdesign.IndividualDosingType;
import eu.ddmore.libpharmml.dom.trialdesign.LookupTableType;
import eu.ddmore.libpharmml.dom.trialdesign.ObservationsGroupType;
import eu.ddmore.libpharmml.dom.trialdesign.PopulationMappingType;
import eu.ddmore.libpharmml.dom.trialdesign.PopulationType;
import eu.ddmore.libpharmml.dom.trialdesign.SegmentDefnType;
import eu.ddmore.libpharmml.dom.trialdesign.SteadyStateParameterType;
import eu.ddmore.libpharmml.dom.trialdesign.SteadyStateType;
import eu.ddmore.libpharmml.dom.trialdesign.StudyEventType;
import eu.ddmore.libpharmml.dom.trialdesign.StudyPeriodType;
import eu.ddmore.libpharmml.dom.trialdesign.StudyTimePointType;
import eu.ddmore.libpharmml.dom.trialdesign.TargetMappingType;
import eu.ddmore.libpharmml.dom.trialdesign.TrialDesignType;
import eu.ddmore.libpharmml.dom.trialdesign.TrialStructureType;
import eu.ddmore.libpharmml.dom.trialdesign.WashoutType;


/**
 * Root type of all elements and types defining elements in PharmML.
 * 
 * <p>Java class for PharmMLRootType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PharmMLRootType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{http://www.pharmml.org/2013/03/CommonTypes}RootElementGroup"/>
 *       &lt;attGroup ref="{http://www.pharmml.org/2013/03/CommonTypes}RootAttributesGroup"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PharmMLRootType", propOrder = {
    "description"
})
@XmlSeeAlso({
    IndependentVariableType.class,
    ModelDefinitionType.class,
    TrialDesignType.class,
    ModellingStepsType.class,
    SymbolRefType.class,
    LevelReferenceType.class,
    InterpolationType.class,
    BooleanType.class,
    VariableAssignmentType.class,
    OidRefType.class,
    SequenceType.class,
    VectorType.class,
    MatrixType.class,
    InitialTimeType.class,
    InterpolationIVType.class,
    MatrixColumnRowNames.class,
    MatrixRowType.class,
    InitialConditionType.class,
    Rhs.class,
    InitialValueType.class,
    CommonVariableDefinitionType.class,
    LookupTableType.class,
    ActivityType.class,
    WashoutType.class,
    DosingRegimenType.class,
    StudyEventType.class,
    TrialStructureType.class,
    DosingVariableType.class,
    SteadyStateParameterType.class,
    ArmDefnType.class,
    PopulationType.class,
    SteadyStateType.class,
    StudyTimePointType.class,
    IndividualDosingType.class,
    CellDefnType.class,
    SegmentDefnType.class,
    ObservationsGroupType.class,
    PopulationMappingType.class,
    DemographicType.class,
    TargetMappingType.class,
    StudyPeriodType.class,
    DosingTimesPointsType.class,
    ImportTargetDataType.class,
    TargetToolDataSetType.class,
    DataSetType.class,
    ImportDataType.class,
    ColumnsDefinitionType.class,
    ColumnRefType.class,
    ColumnMappingType.class,
    CommonColumnDefnType.class,
    TimepointsType.class,
    MappingType.class,
    CommonModellingStepType.class,
    OperationPropertyType.class,
    SimulationOperationType.class,
    AlgorithmType.class,
    TargetToolReferenceType.class,
    CodeInjectionType.class,
    TargetToolType.class,
    ParameterEstimateType.class,
    ObservationsType.class,
    StepDependencyType.class,
    DependentsType.class,
    NONMEMdataSetType.class,
    ScalarRhs.class,
    TargetToolSymbolType.class,
    DatasetMappingType.class,
    StepType.class,
    GenericCodeType.class,
    SymbolMappingType.class,
    ToEstimateType.class,
    EstimationOperationType.class,
    StructuralModelType.class,
    ObservationErrorType.class,
    CommonParameterType.class,
    VariabilityLevelDefnType.class,
    VariabilityDefnBlock.class,
    CovariateModelType.class,
    CommonParameterModelType.class,
    CorrelationType.class,
    CorrelatedRandomVarType.class,
    CovariateDefinitionType.class,
    MultipleDVMappingType.class
})
public abstract class PharmMLRootType extends PharmMLElement{

    @XmlElement(name = "Description")
    protected AnnotationType description;
    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String id;

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link AnnotationType }
     *     
     */
    public AnnotationType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link AnnotationType }
     *     
     */
    public void setDescription(AnnotationType value) {
        this.description = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

}
