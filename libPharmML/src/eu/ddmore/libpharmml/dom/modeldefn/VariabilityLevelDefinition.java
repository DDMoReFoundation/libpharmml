/*******************************************************************************
 * Copyright (c) 2014,2015 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.24 at 03:18:36 PM GMT 
//


package eu.ddmore.libpharmml.dom.modeldefn;

import java.util.List;

import javax.swing.tree.TreeNode;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import eu.ddmore.libpharmml.dom.commontypes.Name;
import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.dom.commontypes.Symbol;
import eu.ddmore.libpharmml.impl.XMLFilter;
import eu.ddmore.libpharmml.util.ChainedList;


/**
 * Defines the variability level.
 * 
 * <p>Java class for VariabilityLevelDefnType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VariabilityLevelDefnType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.pharmml.org/2013/03/CommonTypes}Name" minOccurs="0"/>
 *         &lt;element name="ParentLevel" type="{http://www.pharmml.org/2013/03/ModelDefinition}ParentLevelType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://www.pharmml.org/2013/03/CommonTypes}SymbolDefinitionGroup"/>
 *       &lt;attribute name="referenceLevel" type="{http://www.pharmml.org/2013/03/ModelDefinition}ReferenceLevelType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VariabilityLevelDefnType", propOrder = {
    "name",
    "parentLevel"
})
public class VariabilityLevelDefinition
    extends PharmMLRootType implements Symbol
{

    @XmlElement(name = "Name", namespace = XMLFilter.NS_DEFAULT_CT)
    protected Name name;
    @XmlElement(name = "ParentLevel")
    protected ParentLevel parentLevel;
    @XmlAttribute(name = "referenceLevel")
    protected Boolean referenceLevel; // since PharmML 0.5.1
    @XmlAttribute(name = "symbId", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String symbId;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link Name }
     *     
     */
    public Name getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link Name }
     *     
     */
    public void setName(Name value) {
        this.name = value;
    }

    /**
     * Gets the value of the parentLevel property.
     * 
     * @return
     *     possible object is
     *     {@link ParentLevel }
     *     
     */
    public ParentLevel getParentLevel() {
        return parentLevel;
    }

    /**
     * Sets the value of the parentLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParentLevel }
     *     
     */
    public void setParentLevel(ParentLevel value) {
        this.parentLevel = value;
    }

    /**
     * Gets the value of the referenceLevel property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     * @since PharmML 0.5.1
     */
    public Boolean isReferenceLevel() {
        return referenceLevel;
    }

    /**
     * Sets the value of the referenceLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @since PharmML 0.5.1
     */
    public void setReferenceLevel(Boolean value) {
        this.referenceLevel = value;
    }

    /**
     * Gets the value of the symbId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSymbId() {
        return symbId;
    }

    /**
     * Sets the value of the symbId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSymbId(String value) {
        this.symbId = value;
    }
    
    @Override
	protected List<TreeNode> listChildren() {
		return new ChainedList<TreeNode>()
				.addIfNotNull(name)
				.addIfNotNull(parentLevel);
	}

}
