/*******************************************************************************
 * Copyright (c) 2014,2015 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.21 at 11:29:00 AM BST 
//


package eu.ddmore.libpharmml.dom.modeldefn;

import java.util.ArrayList;
import java.util.List;

import javax.swing.tree.TreeNode;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import eu.ddmore.libpharmml.dom.commontypes.PharmMLRootType;
import eu.ddmore.libpharmml.dom.commontypes.Rhs;
import eu.ddmore.libpharmml.dom.maths.LogicBinOp;
import eu.ddmore.libpharmml.impl.XMLFilter;
import eu.ddmore.libpharmml.util.ChainedList;


/**
 * Type defining probability assignment element.
 * 
 * <p>Java class for ProbabilityAssignmentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ProbabilityAssignmentType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.pharmml.org/2013/03/CommonTypes}PharmMLRootType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{http://www.pharmml.org/2013/03/Maths}LogicBinop"/>
 *           &lt;element name="Probability" type="{http://www.pharmml.org/2013/03/ModelDefinition}ProbabilityType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="TransitionRate" type="{http://www.pharmml.org/2013/03/ModelDefinition}TransitionRateType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://www.pharmml.org/2013/03/CommonTypes}Assign" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProbabilityAssignmentType", propOrder = {
    "logicBinop",
    "probability",
    "transitionRate",
    "assign"
})
public class ProbabilityAssignment
    extends PharmMLRootType
{

    @XmlElement(name = "LogicBinop", namespace = XMLFilter.NS_DEFAULT_MATH)
    protected LogicBinOp logicBinop;
    @XmlElement(name = "Probability")
    protected List<Probability> probability;
    @XmlElement(name = "TransitionRate")
    protected List<TransitionRate> transitionRate;
    @XmlElement(name = "Assign", namespace = XMLFilter.NS_DEFAULT_CT)
    protected Rhs assign;

    /**
     * Gets the value of the logicBinop property.
     * 
     * @return
     *     possible object is
     *     {@link LogicBinOp }
     *     
     */
    public LogicBinOp getLogicBinop() {
        return logicBinop;
    }

    /**
     * Sets the value of the logicBinop property.
     * 
     * @param value
     *     allowed object is
     *     {@link LogicBinOp }
     *     
     */
    public void setLogicBinop(LogicBinOp value) {
        this.logicBinop = value;
    }

    /**
     * Gets the value of the probability property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the probability property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProbability().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProbabilityType }
     * 
     * 
     */
    public List<Probability> getListOfProbability() {
        if (probability == null) {
            probability = new ArrayList<Probability>();
        }
        return this.probability;
    }

    /**
     * Gets the value of the transitionRate property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transitionRate property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransitionRate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TransitionRate }
     * 
     * 
     */
    public List<TransitionRate> getListOfTransitionRate() {
        if (transitionRate == null) {
            transitionRate = new ArrayList<TransitionRate>();
        }
        return this.transitionRate;
    }

    /**
     * Gets the value of the assign property.
     * 
     * @return
     *     possible object is
     *     {@link Rhs }
     *     
     */
    public Rhs getAssign() {
        return assign;
    }

    /**
     * Sets the value of the assign property.
     * 
     * @param value
     *     allowed object is
     *     {@link Rhs }
     *     
     */
    public void setAssign(Rhs value) {
        this.assign = value;
    }
    
    /**
     * Creates a new empty {@link LogicBinOp} element, adds it to the current {@link ProbabilityAssignment} object and returns it.
     * @return The created {@link LogicBinOp} object.
     */
    public LogicBinOp createLogicBinop(){
            LogicBinOp el = new LogicBinOp();
            this.logicBinop = el;
            return el;
    }

    /**
     * Creates a new empty {@link Probability} element, adds it to the current {@link ProbabilityAssignment} object and returns it.
     * @return The created {@link Probability} object.
     */
    public Probability createProbability(){
            Probability el = new Probability();
            getListOfProbability().add(el);
            return el;
    }

    /**
     * Creates a new empty {@link TransitionRate} element, adds it to the current {@link ProbabilityAssignment} object and returns it.
     * @return The created {@link TransitionRate} object.
     */
    public TransitionRate createTransitionRate(){
            TransitionRate el = new TransitionRate();
            getListOfTransitionRate().add(el);
            return el;
    }
    
    @Override
	protected List<TreeNode> listChildren() {
		return new ChainedList<TreeNode>()
				.addIfNotNull(logicBinop)
				.addIfNotNull(probability)
				.addIfNotNull(transitionRate)
				.addIfNotNull(assign);
	}


}
