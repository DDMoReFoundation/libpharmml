/*******************************************************************************
 * Copyright (c) 2014,2015 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 * 
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 * 
 *  		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.24 at 03:18:36 PM GMT 
//


package eu.ddmore.libpharmml.dom.uncertml;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StatisticsCollectionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StatisticsCollectionType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.uncertml.org/3.0}AbstractSummaryStatisticType">
 *       &lt;sequence maxOccurs="unbounded">
 *         &lt;element ref="{http://www.uncertml.org/3.0}AbstractSummaryStatistic"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StatisticsCollectionType", propOrder = {
    "abstractSummaryStatistic"
})
@XmlSeeAlso({
    StatisticsCollection.class
})
public class StatisticsCollectionType
    extends AbstractSummaryStatisticType
{

	@XmlTransient
	public static java.lang.String DEFINITION_ELEMENT_URI = "statistics-collection";

	@Override
	protected java.lang.String getDefinitionElementURI() {
		return DEFINITION_ELEMENT_URI;
	}

    @XmlElementRef(name = "AbstractSummaryStatistic", namespace = "http://www.uncertml.org/3.0", type = JAXBElement.class)
    protected List<JAXBElement<? extends AbstractSummaryStatisticType>> abstractSummaryStatistic;

    /**
     * Gets the value of the abstractSummaryStatistic property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the abstractSummaryStatistic property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAbstractSummaryStatistic().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Range }{@code >}
     * {@link JAXBElement }{@code <}{@link CentredMoment }{@code >}
     * {@link JAXBElement }{@code <}{@link Correlation }{@code >}
     * {@link JAXBElement }{@code <}{@link InterquartileRange }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractSummaryStatisticType }{@code >}
     * {@link JAXBElement }{@code <}{@link CovarianceMatrix }{@code >}
     * {@link JAXBElement }{@code <}{@link Kurtosis }{@code >}
     * {@link JAXBElement }{@code <}{@link Skewness }{@code >}
     * {@link JAXBElement }{@code <}{@link Quantile }{@code >}
     * {@link JAXBElement }{@code <}{@link CoefficientOfVariation }{@code >}
     * {@link JAXBElement }{@code <}{@link Mean }{@code >}
     * {@link JAXBElement }{@code <}{@link StatisticsCollection }{@code >}
     * {@link JAXBElement }{@code <}{@link Percentile }{@code >}
     * {@link JAXBElement }{@code <}{@link Moment }{@code >}
     * {@link JAXBElement }{@code <}{@link ConfidenceInterval }{@code >}
     * {@link JAXBElement }{@code <}{@link CredibleInterval }{@code >}
     * {@link JAXBElement }{@code <}{@link Mode }{@code >}
     * {@link JAXBElement }{@code <}{@link Probability }{@code >}
     * {@link JAXBElement }{@code <}{@link Variance }{@code >}
     * {@link JAXBElement }{@code <}{@link Quartile }{@code >}
     * {@link JAXBElement }{@code <}{@link DiscreteProbability }{@code >}
     * {@link JAXBElement }{@code <}{@link Decile }{@code >}
     * {@link JAXBElement }{@code <}{@link StandardDeviation }{@code >}
     * {@link JAXBElement }{@code <}{@link Median }{@code >}
     * 
     * 
     */
    public List<JAXBElement<? extends AbstractSummaryStatisticType>> getAbstractSummaryStatistic() {
        if (abstractSummaryStatistic == null) {
            abstractSummaryStatistic = new ArrayList<JAXBElement<? extends AbstractSummaryStatisticType>>();
        }
        return this.abstractSummaryStatistic;
    }

}
